name: Push fognav_msgs to Artifactory

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      push_to_artifactory:
        description: 'Push packages to artifactory?'
        required: true
        default: false
        type: boolean
      push_to_docker:
        description: 'Push packages to docker image?'
        required: true
        default: true
        type: boolean

jobs:
  tii-deb-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ros2_distro: [humble]
    steps:
      - name: Checkout fognav_msgs
        uses: actions/checkout@v2
        with:
          path: fognav_msgs

      - name: Run fognav_msgs docker build
        env:
          ROS: 1
          ROS_DISTRO: ${{ matrix.ros2_distro }}
          PACKAGE_NAME: fognav_msgs
        run: |
          set -eux
          mkdir bin
          pushd fognav_msgs
          ./build_deb.sh  ../bin/
          popd
      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: fognav_msgs
          path: bin/build_output/*.deb
          retention-days: 14

  docker_image:
    runs-on: ubuntu-latest
    needs: tii-deb-build
    if: (github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.push_to_docker))
    steps:
      - name: Checkout fognav_msgs
        uses: actions/checkout@v2

      - name: Download builds
        uses: actions/download-artifact@v2
        with:
          name: fognav_msgs
          path: bin/build_output

      - uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/tiiuae/tii-fognav-msgs
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build tii-fognav-msgs image and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ./Dockerfile.containerize_deb
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  artifactory:
    runs-on: ubuntu-latest
    needs: tii-deb-build
    if: (github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.push_to_artifactory))
    steps:
      - name: Download builds
        uses: actions/download-artifact@v2
        with:
          name: fognav_msgs
          path: bin/build_output
      - uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ARTIFACTORY_1: ${{ secrets.ARTIFACTORY_TOKEN }}
      - name: Upload to Artifactory
        env:
          ARTIFACTORY_REPO: ssrc-deb-public-local
          DISTRIBUTION: jammy
          COMPONENT: fog-sw
          ARCHITECTURE: amd64
          BUILD_NAME: fognav_msgs
          CI: true
        run: |
          set -exu
          jfrog rt ping
          for pkg in bin/build_output/*.deb
          do
            pkg_name=$(basename $pkg)
            jfrog rt u --deb "$DISTRIBUTION/$COMPONENT/$ARCHITECTURE" \
                       --target-props COMMIT="$GITHUB_SHA" \
                       --build-name "$BUILD_NAME" \
                       --build-number "$GITHUB_SHA" \
                       "$pkg" \
                       "$ARTIFACTORY_REPO/$pkg_name"
          done
          jfrog rt build-publish "$BUILD_NAME" "$GITHUB_SHA"
          jfrog rt bpr "$BUILD_NAME" "$GITHUB_SHA" "$ARTIFACTORY_REPO" \
                       --status dev \
                       --comment "development build"